//
//  CZViewController.m
//  CZAppLaunchKit
//
//  Created by Humble7 on 09/22/2022.
//  Copyright (c) 2022 Humble7. All rights reserved.
//

#import "CZViewController.h"
#import <CZAppLaunchKit/CZAppLaunchKit.h>
#import <objc/runtime.h>

@interface CZViewController ()

@end

@implementation CZViewController

- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view, typically from a nib.
    [self runtimeTask];
    [self nestRuntimeTask];
    CZLK_INVOKE_VIEW_DID_LOAD_RECORD();
}

- (void)viewDidAppear:(BOOL)animated {
    [super viewDidAppear:animated];
    CZLK_INVOKE_VIEW_DID_APPEAR_RECORD();
}

- (void)runtimeTask {
    [CZLKManager recordStartWithKey:@"TASK_NAME_A"];
    NSLog(@"TAG_TASK_A_EXECUTE");
    [CZLKManager recordEndWithKey:@"TASK_NAME_A"];
    
    [CZLKManager recordStartWithKey:@"TASK_NAME_B"];
    NSLog(@"TAG_TASK_B_EXECUTE");
    [CZLKManager recordEndWithKey:@"TASK_NAME_B"];
}

- (void)nestRuntimeTask {
    [CZLKManager recordStartWithKey:@"NEST_TASK"];
    [CZLKManager recordStartWithKey:@"NEST_TASK"];
    NSLog(@"TAG_NEST_TASK_EXECUTE");
    [CZLKManager recordEndWithKey:@"NEST_TASK"];
    [CZLKManager recordEndWithKey:@"NEST_TASK"];
}

+ (void)jsonConfigureEntry {
    NSLog(@"UI_005");
}

#pragma mark - Enable CZAPPLaunchKit

CZLK_LIFE_CYCLE_ANCHORS()

// CZLKDefine 宏定义接口使用示例
CZLK_MAIN_SETUP_MAIN_TASK(MAIN_SETUP_001, "MAIN_SETUP_001 detail") {
    NSLog(@"[Test]MAIN_SETUP_001");
}

CZLK_MAIN_SETUP_MAIN_TASK(MAIN_SETUP_002, "MAIN_SETUP_002 detail") {
    NSLog(@"[Test]MAIN_SETUP_002");
}

CZLK_MAIN_SETUP_MAIN_TASK(MAIN_SETUP_003, "MAIN_SETUP_003 detail") {
    NSLog(@"[Test]MAIN_SETUP_003");
}

CZLK_MAIN_SETUP_BACKGROUND_TASK(MAIN_SETUP_BG_001, "MAIN_SETUP_BG_001 detail") {
    NSLog(@"[Test]MAIN_SETUP_BG_001");
}

CZLK_MAIN_SETUP_MAIN_TASK_AFTER_BEFORE(MAIN_SETUP_A_B_001, "MAIN_SETUP_001,MAIN_SETUP_002", "MAIN_SETUP_003", "MAIN_SETUP_A_B_001 detail") {
    NSLog(@"[Test]MAIN_SETUP_A_B_001");
}

CZLK_MAIN_SETUP_BACKGROUND_TASK_AFTER_BEFORE(MAIN_SETUP_BG_A_B_001, "MAIN_SETUP_001", "MAIN_SETUP_002", "MAIN_SETUP_BG_A_B_001 detail") {
    NSLog(@"[Test]MAIN_SETUP_BG_A_B_001");
}

CZLK_MONITOR_SETUP_MAIN_TASK(MONITOR_SETUP_MAIN_001, "MONITOR_SETUP_MAIN_001") {
    NSLog(@"[Test]MONITOR_SETUP_MAIN_001");
}

CZLK_MONITOR_SETUP_MAIN_TASK(MONITOR_SETUP_MAIN_002, "MONITOR_SETUP_MAIN_002") {
    NSLog(@"[Test]MONITOR_SETUP_MAIN_002");
}

CZLK_MONITOR_SETUP_BACKGROUND_TASK(MONITOR_SETUP_BG_001, "MONITOR_SETUP_BG_001") {
    NSLog(@"[Test]MONITOR_SETUP_BG_001");
}

CZLK_MONITOR_SETUP_MAIN_TASK_AFTER_BEFORE(MONITOR_SETUP_MAIN_A_B_001, "MONITOR_SETUP_MAIN_001", "MONITOR_SETUP_MAIN_002", "MONITOR_SETUP_MAIN_A_B_001") {
    NSLog(@"[Test]MONITOR_SETUP_MAIN_A_B_001");
}

CZLK_MONITOR_SETUP_BACKGROUND_TASK_AFTER_BEFORE(MONITOR_SETUP_BACKGROUND_A_B_001, "MONITOR_SETUP_MAIN_001", "MONITOR_SETUP_MAIN_002", "MONITOR_SETUP_BACKGROUND_A_B_001") {
    NSLog(@"[Test]MONITOR_SETUP_BACKGROUND_A_B_001");
}

CZLK_SERVER_CONFIG_MAIN_TASK(SERVER_CONFIG_MAIN_001, "SERVER_CONFIG_MAIN_001") {
    NSLog(@"[Test]SERVER_CONFIG_MAIN_001");
}

CZLK_SERVER_CONFIG_MAIN_TASK(SERVER_CONFIG_MAIN_002, "SERVER_CONFIG_MAIN_002") {
    NSLog(@"[Test]SERVER_CONFIG_MAIN_002");
}

CZLK_SERVER_CONFIG_BACKGROUND_TASK(SERVER_CONFIG_BACKGROUND_001, "SERVER_CONFIG_BACKGROUND_001") {
    NSLog(@"[Test]SERVER_CONFIG_BACKGROUND_001");
}

CZLK_SERVER_CONFIG_MAIN_TASK_AFTER_BEFORE(SERVER_CONFIG_MAIN_A_B_001, "SERVER_CONFIG_MAIN_001", "SERVER_CONFIG_MAIN_002", "SERVER_CONFIG_MAIN_A_B_001") {
    NSLog(@"[Test]SERVER_CONFIG_MAIN_A_B_001");
}

CZLK_SERVER_CONFIG_BACKGROUND_TASK_AFTER_BEFORE(SERVER_CONFIG_BACKGROUND_A_B_001, "SERVER_CONFIG_MAIN_001", "SERVER_CONFIG_MAIN_002", "SERVER_CONFIG_BACKGROUND_A_B_001") {
    NSLog(@"[Test]SERVER_CONFIG_BACKGROUND_A_B_001");
}

CZLK_DATA_SETUP_MAIN_TASK(DATA_SETUP_MAIN_001, "DATA_SETUP_MAIN_001") {
    NSLog(@"[Test]DATA_SETUP_MAIN_001");
}

CZLK_DATA_SETUP_MAIN_TASK(DATA_SETUP_MAIN_002, "DATA_SETUP_MAIN_002") {
    NSLog(@"[Test]DATA_SETUP_MAIN_002");
}

CZLK_DATA_SETUP_BACKGROUND_TASK(DATA_SETUP_BACKGROUND_001, "DATA_SETUP_BACKGROUND_001") {
    NSLog(@"[Test]DATA_SETUP_BACKGROUND_001");
}

CZLK_DATA_SETUP_MAIN_TASK_AFTER_BEFORE(DATA_SETUP_MAIN_A_B_001, "DATA_SETUP_MAIN_001", "DATA_SETUP_MAIN_002", "DATA_SETUP_MAIN_A_B_001") {
    NSLog(@"[Test]DATA_SETUP_MAIN_A_B_001");
}

CZLK_DATA_SETUP_BACKGROUND_TASK_AFTER_BEFORE(DATA_SETUP_BACKGROUND_A_B_001, "DATA_SETUP_MAIN_001", "DATA_SETUP_MAIN_002", "DATA_SETUP_BACKGROUND_A_B_001") {
    NSLog(@"[Test]DATA_SETUP_BACKGROUND_A_B_001");
}

CZLK_UI_PREPARE_MAIN_TASK(UI_PREPARE_MAIN_001, "UI_PREPARE_MAIN_001") {
    NSLog(@"[Test]UI_PREPARE_MAIN_001");
}

CZLK_UI_PREPARE_MAIN_TASK(UI_PREPARE_MAIN_002, "UI_PREPARE_MAIN_002") {
    NSLog(@"[Test]UI_PREPARE_MAIN_002");
}

CZLK_UI_PREPARE_BACKGROUND_TASK(UI_PREPARE_BACKGROUND_001, "UI_PREPARE_BACKGROUND_001") {
    NSLog(@"[Test]DATA_SETUP_BACKGROUND_001");
}

CZLK_UI_PREPARE_MAIN_TASK_AFTER_BEFORE(UI_PREPARE_MAIN_A_B_001, "UI_PREPARE_MAIN_001", "UI_PREPARE_MAIN_002", "UI_PREPARE_MAIN_A_B_001") {
    NSLog(@"[Test]UI_PREPARE_MAIN_A_B_001");
}

CZLK_UI_PREPARE_BACKGROUND_TASK_AFTER_BEFORE(UI_PREPARE_BACKGROUND_A_B_001, "UI_PREPARE_MAIN_001", "UI_PREPARE_MAIN_002", "UI_PREPARE_BACKGROUND_A_B_001") {
    NSLog(@"[Test]UI_PREPARE_BACKGROUND_A_B_001");
}

CZLK_UI_SETUP_MAIN_TASK(UI_SETUP_MAIN_001, "UI_SETUP_MAIN_001") {
    NSLog(@"[Test]UI_SETUP_MAIN_001");
}

CZLK_UI_SETUP_MAIN_TASK(UI_SETUP_MAIN_002, "UI_SETUP_MAIN_002") {
    NSLog(@"[Test]UI_SETUP_MAIN_002");
}

CZLK_UI_SETUP_BACKGROUND_TASK(UI_SETUP_BACKGROUND_001, "UI_SETUP_BACKGROUND_001") {
    NSLog(@"[Test]UI_SETUP_BACKGROUND_001");
}

CZLK_UI_SETUP_MAIN_TASK_AFTER_BEFORE(UI_SETUP_MAIN_A_B_001, "UI_SETUP_MAIN_001", "UI_SETUP_MAIN_002", "UI_SETUP_MAIN_A_B_001") {
    NSLog(@"[Test]UI_SETUP_MAIN_A_B_001");
}

CZLK_UI_SETUP_BACKGROUND_TASK_AFTER_BEFORE(UI_SETUP_BACKGROUND_A_B_001, "UI_SETUP_MAIN_001", "UI_SETUP_MAIN_002", "UI_SETUP_BACKGROUND_A_B_001") {
    NSLog(@"[Test]UI_SETUP_BACKGROUND_A_B_001");
}

CZLK_UI_POST_MAIN_TASK(UI_POST_MAIN_001, "UI_POST_MAIN_001") {
    NSLog(@"[Test]UI_POST_MAIN_001");
}

CZLK_UI_POST_MAIN_TASK(UI_POST_MAIN_002, "UI_POST_MAIN_002") {
    NSLog(@"[Test]UI_POST_MAIN_002");
}

CZLK_UI_POST_BACKGROUND_TASK(UI_POST_BACKGROUND_001, "UI_POST_BACKGROUND_001") {
    NSLog(@"[Test]UI_POST_BACKGROUND_001");
}

CZLK_UI_POST_MAIN_TASK_AFTER_BEFORE(UI_POST_MAIN_A_B_001, "UI_POST_MAIN_001", "UI_POST_MAIN_002", "UI_POST_MAIN_A_B_001") {
    NSLog(@"[Test]UI_POST_MAIN_A_B_001");
}

CZLK_UI_POST_BACKGROUND_TASK_AFTER_BEFORE(UI_POST_BACKGROUND_A_B_001, "UI_POST_MAIN_001", "UI_POST_MAIN_002", "UI_POST_BACKGROUND_A_B_001") {
    NSLog(@"[Test]UI_POST_BACKGROUND_A_B_001");
}

CZLK_BEFORE_RENDER_MAIN_TASK(BEFORE_RENDER_MAIN_001, "BEFORE_RENDER_MAIN_001") {
    NSLog(@"[Test]BEFORE_RENDER_MAIN_001");
}

CZLK_BEFORE_RENDER_MAIN_TASK(BEFORE_RENDER_MAIN_002, "BEFORE_RENDER_MAIN_002") {
    NSLog(@"[Test]BEFORE_RENDER_MAIN_002");
}

CZLK_BEFORE_RENDER_BACKGROUND_TASK(BEFORE_RENDER_BACKGROUND_001, "BEFORE_RENDER_BACKGROUND_001") {
    NSLog(@"[Test]BEFORE_RENDER_BACKGROUND_001");
}

CZLK_BEFORE_RENDER_MAIN_TASK_AFTER_BEFORE(BEFORE_RENDER_MAIN_A_B_001, "BEFORE_RENDER_MAIN_001", "BEFORE_RENDER_MAIN_002", "BEFORE_RENDER_MAIN_A_B_001") {
    NSLog(@"[Test]BEFORE_RENDER_MAIN_A_B_001");
}

CZLK_BEFORE_RENDER_BACKGROUND_TASK_AFTER_BEFORE(BEFORE_RENDER_BACKGROUND_A_B_001, "BEFORE_RENDER_MAIN_001", "BEFORE_RENDER_MAIN_002", "BEFORE_RENDER_BACKGROUND_A_B_001") {
    NSLog(@"[Test]BEFORE_RENDER_BACKGROUND_A_B_001");
}

CZLK_THIRD_SDK_MAIN_TASK(THIRD_SDK_MAIN_001, "THIRD_SDK_MAIN_001") {
    NSLog(@"[Test]THIRD_SDK_MAIN_001");
}

CZLK_THIRD_SDK_MAIN_TASK(THIRD_SDK_MAIN_002, "THIRD_SDK_MAIN_002") {
    NSLog(@"[Test]THIRD_SDK_MAIN_002");
}

CZLK_THIRD_SDK_BACKGROUND_TASK(THIRD_SDK_BACKGROUND_001, "THIRD_SDK_BACKGROUND_001") {
    NSLog(@"[Test]THIRD_SDK_BACKGROUND_001");
}

CZLK_THIRD_SDK_MAIN_TASK_AFTER_BEFORE(THIRD_SDK_MAIN_A_B_001, "THIRD_SDK_MAIN_001", "THIRD_SDK_MAIN_002", "THIRD_SDK_MAIN_A_B_001") {
    NSLog(@"[Test]THIRD_SDK_MAIN_A_B_001");
}

CZLK_THIRD_SDK_BACKGROUND_TASK_AFTER_BEFORE(THIRD_SDK_BACKGROUND_A_B_001, "THIRD_SDK_MAIN_001", "THIRD_SDK_MAIN_002", "THIRD_SDK_BACKGROUND_A_B_001") {
    NSLog(@"[Test]THIRD_SDK_BACKGROUND_A_B_001");
}

// TODO: why this case can't work?
//CZLK_MAIN_SETUP_MAIN_TASK_AFTER_BEFORE(MAIN_SETUP_A_B_001, "MAIN_SETUP_001,MAIN_SETUP_BG_001", "MAIN_SETUP_002", "MAIN_SETUP_A_B_001 detail") {
//    NSLog(@"[Test]MAIN_SETUP_A_B_001");
//}


@end
